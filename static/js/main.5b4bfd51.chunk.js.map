{"version":3,"sources":["HexDump/HexDumpOffsetPanel.js","HexDump/HexDumpBodyPanel.js","Utils.js","HexDump/HexDumpCharactersPanel.js","HexDump/HexDump.js","LengthTextArea/CalcTextArea.js","App.js","index.js"],"names":["HexDumpOffsetPanel","_Component","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","key","value","rows","row","cursorOffset","rowCounter","i","hexDumpLength","offset","substr","classes","react_default","a","createElement","className","join","data-offset","Component","HexDumpBodyPanel","_this","onChangeCursorOffset","bind","assertThisInitialized","state","index","event","target","dataset","items","hexdump","length","push","text","self","map","el","onMouseOver","Utils","Text","isPrint","val","HexSymbols","intToHex","byteToHex","halfByteToHex","charAt","stringToHex","s","result","charCodeAt","hexToIntArray","hexString","upperHexString","toUpperCase","currentValue","indexOf","intArrayToString","intArray","String","fromCharCode","Hex","cleanup","replace","Encoding","GSM0338","basicSet","extendedSet","mapping","escCharacter","isRepresentable","str","isCharRepresentable","character","Buffer","create","data","position","cap","readByte","b","readShort","res","readInt","Bytes","readLong","array","Smpp","DataTypes","Integer","read","buf","CString","HexDumpCharactersPanel","characters","C","idx","HexDump","changeCursorOffset","changeCursorTimer","clearTimeout","newState","assign","setTimeout","setState","_React$createElement","HexDumpOffsetPanel_HexDumpOffsetPanel","HexDumpBodyPanel_HexDumpBodyPanel","HexDumpCharactersPanel_HexDumpCharactersPanel","defineProperty","CalcTextArea","textLength","error","timer","onChange","rawText","hexDump","Math","floor","defaultValue","cols","onKeyUp","App","hash","window","location","oldText","HexDump_HexDump_HexDump","CalcTextArea_CalcTextArea","href","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5b4bfd51.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport \"./HexDump.css\";\nimport {HexDump} from \"./HexDump\";\n\nexport class HexDumpOffsetPanel extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        var rows = [];\n\n        var row = this.props.cursorOffset != null ? this.props.cursorOffset >> 4 : null;\n\n        var rowCounter = 0;\n        for (var i=0;i<this.props.hexDumpLength;i+=16,rowCounter++) {\n            var offset = (\"000000000000\" + i).substr(-12);\n\n            var classes = [\n                (((i >> 4) % 2 == 0) ? \"strip-odd\" : \"strip-even\"),\n                (row != null && row == i >> 4 ? \"selected\" : \"\"),\n            ];\n\n            rows[i] = (\n                function(){\n                    return (\n                        <span\n                            className={classes.join(\" \")}\n                            data-offset={i}\n                            key={i}\n                        >{offset}</span>\n                    )\n                }()\n            );\n        }\n\n        return (\n            <div className=\"hex-dump-offset-panel\">\n                {rows}\n            </div>\n        );\n    }\n}","import React,{Component} from 'react';\nimport \"./HexDump.css\";\n\nimport \"../color-groups.css\";\n\nexport class HexDumpBodyPanel extends Component {\n    constructor(props) {\n        super();\n\n        this.onChangeCursorOffset = this.onChangeCursorOffset.bind(this);\n\n        this.state = {index:0};\n    }\n    onChangeCursorOffset(event) {\n        this.props.onChangeCursorOffset(event.target.dataset.offset);\n    }\n    render() {\n        var items = [];\n\n        var offset=0;\n        for (var i=0;i<this.props.hexdump.length;i+=2, offset++) {\n            items.push({offset:offset, text:this.props.hexdump.substr(i,2)});\n        }\n\n        var self = this;\n\n        return (\n            <div className=\"hex-dump-body-panel\">\n                {items\n                    .map(\n                        function(el) {\n                            return (\n                                <span\n                                    onMouseOver={self.onChangeCursorOffset}\n                                    data-offset={el.offset}\n                                    className={self.props.cursorOffset==el.offset ? \"selected\" : \"\"}\n                                    key={el.offset}>{el.text}</span>\n                            );\n                        }\n                    )\n                }\n            </div>\n        );\n    }\n}","let Utils = {};\nUtils.Text = {};\nUtils.Text.isPrint=function(val) {\n\tif (val > 0x20 && val < 0x7f) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\nUtils.Text.HexSymbols = \"0123456789ABCDEF\";\nUtils.Text.intToHex = function(val) {\n\tif (val > 255) {\n\t\t//var H = Utils.Text.byteToHex(val >> 8);\n\t\tvar H = Utils.Text.intToHex(val >> 8);\n\t\tvar L = Utils.Text.byteToHex(val & 0xFF);\n\t\t\t\t\n\t\treturn \"\"+H+L;\n\t} else {\n\t\treturn Utils.Text.byteToHex(val);\n\t}\n};\nUtils.Text.byteToHex = function(val) {\n\tvar H = Utils.Text.halfByteToHex(val >> 4);\n\tvar L =\tUtils.Text.halfByteToHex(val & 0xF);\n\t\n\treturn \"\"+H+L;\n};\nUtils.Text.halfByteToHex = function(val) {\n\treturn Utils.Text.HexSymbols.charAt(val & 0xF);\n};\n\nUtils.Text.stringToHex=function(s) {\n\tvar result=[];\n\tfor (var i=0;i<s.length;i++) {\n\t\tresult.push(Utils.Text.intToHex(s.charCodeAt(i)));\n\t}\n\t\n\treturn result.join('');\n};\n\nUtils.Text.hexToIntArray=function(hexString) {\n\tvar upperHexString = hexString.toUpperCase();\n\t\n\tvar result=[];\n\tvar currentValue=0;\n\tfor (var i=0;i<upperHexString.length;i++) {\n\t\tif (i % 2 === 1) {\n\t\t\tcurrentValue |= Utils.Text.HexSymbols.indexOf(upperHexString.charAt(i)); \n\t\t\tresult.push(currentValue);\t\t\t\t\t\t\n\t\t} else {\n\t\t\tcurrentValue = Utils.Text.HexSymbols.indexOf(upperHexString.charAt(i)) << 4; \n\t\t}\n\t}\n\t\t\t \n\treturn result;\t \n};\n\nUtils.Text.intArrayToString=function(intArray) {\n\tvar result=[];\n\t\n\tfor (var i=0;i<intArray.length;i++) {\n\t\tresult.push(String.fromCharCode(intArray[i]));\n\t}\n\t\t\t \n\treturn result.join('');\t \n};\n\nUtils.Text.Hex = {};\n\nUtils.Text.Hex.cleanup = function(hexString) {\n\tif (hexString == null) {\n\t\treturn \"\";\n\t}\n\n    var text = hexString.replace(/[^0-9a-fA-F]/gim,\"\");\n\n    return text;\n};\n\nUtils.Text.Encoding = {};\n\nUtils.Text.Encoding.GSM0338 = {};\n\nUtils.Text.Encoding.GSM0338.basicSet = \"@£$¥èéùìòÇ\\rØø\\nÅåΔ_ΦΓΛΩΠΨΣΘΞ@ÆæßÉ !\\\"#¤%&'()*+,-./0123456789:;<=>?¡ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÑÜ§¿abcdefghijklmnopqrstuvwxyzäöñüà\";\nUtils.Text.Encoding.GSM0338.extendedSet = \"|^€{}[~]\\\\\";\nUtils.Text.Encoding.GSM0338.mapping = [0x40, 0x14, 0x65, 0x28, 0x29, 0x3c, 0x3d, 0x3e, 0x2f];\nUtils.Text.Encoding.GSM0338.escCharacter = 0x1B;\n\nUtils.Text.Encoding.GSM0338.isRepresentable = function(str) {\n\tif (str == null || str.length == 0) {\n\t\treturn true;\n\t}\n\n\tif (str.length > 1) {\n\t\tfor (var i=0;i<str.length;i++) {\n\t\t\tvar res = Utils.Text.Encoding.GSM0338.isRepresentable(str.charCodeAt());\n\t\t}\n\t}\n};\n\nUtils.Text.Encoding.GSM0338.isCharRepresentable = function(character) {\n\tvar basicPosition = Utils.Text.Encoding.GSM0338.basicSet.indexOf(character);\n\n\tif (basicPosition >= 0) {\n        return true;\n    }\n\n    var extendedPosition = Utils.Text.Encoding.GSM0338.extendedSet.indexOf(character);\n\n\tif (extendedPosition >= 0) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nUtils.Buffer = {};\n\nUtils.Buffer.create = function(intArray) {\n\tvar buffer = {\n\t\tdata: intArray,\n\t\tlength: intArray.length,\n\t\tposition:0,\n\t\tcap:function() {\n\t\t\treturn this.length - this.position;\n\t\t},\n\t\treadByte:function() {\n\t\t\tvar b = this.data[this.position];\n\t\t\tthis.position++;\n\t\t\t\n\t\t\treturn b;\n\t\t},\n\t\treadShort:function() {\n\t\t  var res = 0;\n\t\t\tfor (var i=0;i<2;i++) {\n\t\t\t\tres = (res << 8) + this.readByte();\n\t\t\t}\n\n\t\t\treturn res;\t\n\t\t},\n\t\treadInt:function() {\n\t\t\tvar res = 0;\n\t\t\tfor (var i=0;i<4;i++) {\n\t\t\t\tres = (res << 8) + this.readByte();\n\t\t\t}\n\n\t\t\treturn res;\n\t\t}\n\t};\n\t\n\treturn buffer;\n};\n\nUtils.Bytes = {};\n\nUtils.Bytes.readLong=function(array) {\n\tvar res = 0;\n\tfor (var i=0;i<4;i++) {\n\t\tres = (res << 8) + array[i];\n\t}\n\t\n\treturn res;\n}\n\nUtils.Smpp = {};\n\nUtils.Smpp.DataTypes = {};\n\nUtils.Smpp.DataTypes.Integer = {\n\tread:function(buf) {\n\t\treturn buf.readInt();\n\t}\n};\nUtils.Smpp.DataTypes.CString = {};\nUtils.Smpp.DataTypes.String = {};\nUtils.Smpp.DataTypes.Integer = {};\n/*\nvar hexDumpStr=\"0000007500000004000000000000000200010131393438000000313233343536373839000000000000000003000568656C6C6F000500010000070001010006000101000800020000042400000019000100020F000101020E0001010421000101000D000100000F000101000E000101001000020000\";\n\nvar intArr = Utils.Text.hexToIntArray(hexDumpStr);\n\nvar buf = Utils.Buffer.create(intArr);\n\nconsole.log(\"Length:\" + buf.readInt() +\":\" + buf.cap());\nconsole.log(\"Command ID:\" + buf.readInt() +\":\" + buf.cap());\nconsole.log(\"Status:\" + buf.readInt() +\":\" + buf.cap());\nconsole.log(\"Sequence number:\"+buf.readInt() +\":\" + buf.cap());*/\n\n\nexport default Utils;","import React,{Component} from 'react';\n\nimport \"./HexDump.css\";\nimport Utils from \"../Utils\";\nimport {HexDump} from \"./HexDump\";\n\nexport class HexDumpCharactersPanel extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeCursorOffset = this.onChangeCursorOffset.bind(this);\n    }\n    onChangeCursorOffset(event) {\n        this.props.onChangeCursorOffset(event.target.dataset.offset);\n    }\n    render() {\n        var hexElements = Utils.Text.hexToIntArray(this.props.hexdump);\n\n        var characters =\n            hexElements\n                .map(\n                    function(el) {\n                        if (Utils.Text.isPrint(el)) {\n                            return String.fromCharCode(el);\n                        } else {\n                            return \".\";\n                        }\n                    }\n            );\n\n        var self = this;\n\n        return (\n            <div className=\"hex-dump-characters-panel\">\n                {characters\n                    .map(\n                        function(C, idx) {\n                            return (\n                                <span\n                                    onMouseOver={self.onChangeCursorOffset}\n                                    className={self.props.cursorOffset==idx ? \"selected\" : \"\"}\n                                    key={idx}\n                                    data-offset={idx}>{C}</span>\n                            );\n                        }\n                    )}\n            </div>\n        );\n    }\n}","import React,{Component} from 'react';\nimport {HexDumpOffsetPanel} from \"./HexDumpOffsetPanel\";\nimport {HexDumpBodyPanel} from \"./HexDumpBodyPanel\";\nimport {HexDumpCharactersPanel} from \"./HexDumpCharactersPanel\";\nimport \"./HexDump.css\";\n\nexport class HexDump extends Component {\n    constructor(props) {\n        super(props);\n\n        this.changeCursorOffset = this.changeCursorOffset.bind(this);\n\n        this.state = {\n            cursorOffset:null,\n            changeCursorTimer:null\n        };\n    }\n    changeCursorOffset(offset) {\n        if (this.state.changeCursorTimer != null) {\n            clearTimeout(this.state.changeCursorTimer);\n        }\n\n        var newState = Object.assign({}, this.state);\n\n        var self = this;\n\n        newState.changeCursorTimer =\n            setTimeout(\n                function() {\n                    clearTimeout(self.state.changeCursorTimer);\n\n                    self.setState({cursorOffset:offset, changeCursorTimer:null});\n                },\n                10\n            );\n\n        this.setState(newState);\n    }\n    render() {\n        return (\n            <div className=\"hex-dump-panel\">\n                <div className=\"hex-dump-container\">\n                    <HexDumpOffsetPanel cursorOffset={this.state.cursorOffset} hexDumpLength={this.props.hexdump.length/2} />\n                    <HexDumpBodyPanel onChangeCursorOffset={this.changeCursorOffset} cursorOffset={this.state.cursorOffset} hexdump={this.props.hexdump} />\n                    <HexDumpCharactersPanel cursorOffset={this.state.cursorOffset} onChangeCursorOffset={this.changeCursorOffset} cursorOffset={this.state.cursorOffset} hexdump={this.props.hexdump} />\n\n                    <div className=\"clearer\" />\n                </div>\n            </div>\n        );\n    }\n}","import React,{Component} from 'react';\n\nexport class CalcTextArea extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textLength: null,\n            error:null,\n            timer:null\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n    onChange(event) {\n        if (this.state.timer != null) {\n            return ;\n        }\n\n        var self = this;\n\n        var target = event.target;\n\n        this.state.timer =\n            setTimeout(\n                function() {\n                    var rawText = target.value;\n\n                    var hexDump = (rawText != null ? rawText.replace(/[^0-9a-fA-F]/gim, \"\") : \"\");\n\n                    var hexDumpLength = hexDump.length;\n\n                    if (hexDumpLength % 2 == 0) {\n                        self.setState({textLength: hexDump.length / 2, error: null});\n                    } else {\n                        self.setState({textLength: Math.floor(hexDump.length / 2), error: \"Not enough input\"});\n                    }\n\n                    clearTimeout(self.state.timer);\n                    self.state.timer = null;\n\n                    if (!!self.props.onChange) {\n                        self.props.onChange(hexDump);\n                    }\n                },\n                500\n            );\n    }\n    render() {\n        var error;\n\n        if (this.state.error != null) {\n            error = (<span className='error'>{this.state.error}</span>);\n        }\n\n        return (\n            <div>\n                <textarea defaultValue={this.props.text} rows={this.props.rows} cols={this.props.cols} onChange={this.onChange} onKeyUp={this.onChange}></textarea><br />\n                <span>Length: {this.state.textLength}</span>\n                <br />\n                {error}\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport {HexDump} from \"./HexDump/HexDump\";\nimport {CalcTextArea} from \"./LengthTextArea/CalcTextArea\";\nimport Utils from \"./Utils\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        var hash = window.location.hash;\n\n        var oldText=\"\";\n\n        if (hash != null && hash.length>1) {\n            oldText = Utils.Text.Hex.cleanup(hash.substr(1));\n        }\n\n        this.state = {\n            text:oldText,\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n    onChange(text) {\n        this.setState({text: text});\n\n        if (text.length <= 2000) {\n            window.location.hash = '#' + text;\n        }\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <HexDump hexdump={this.state.text} />\n                <CalcTextArea rows=\"10\" cols=\"50\" text={this.state.text} onChange={this.onChange} />\n                Link to this page:<a href={\"#\"+this.state.text}>#{this.state.text.length > 20 ? this.state.text.substr(0,20) : this.state.text}</a>\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}