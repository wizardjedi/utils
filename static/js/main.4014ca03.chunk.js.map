{"version":3,"sources":["HexDump/HexDumpOffsetPanel.js","HexDump/HexDumpBodyPanel.js","Utils.js","HexDump/HexDumpCharactersPanel.js","HexDump/HexDump.js","LengthTextArea/CalcTextArea.js","components/Menu.js","routes.js","pages/HomePage.js","pages/HexDumpPage.js","pages/SmppDecoderPage.js","App.js","index.js"],"names":["HexDumpOffsetPanel","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","rows","row","props","cursorOffset","rowCounter","i","hexDumpLength","offset","substr","classes","react_default","a","createElement","className","join","data-offset","Component","HexDumpBodyPanel","_this","call","onChangeCursorOffset","bind","assertThisInitialized","state","index","event","target","dataset","items","hexdump","length","push","text","self","map","el","onMouseOver","Utils","Text","isPrint","val","HexSymbols","intToHex","byteToHex","halfByteToHex","charAt","stringToHex","s","result","charCodeAt","hexToIntArray","hexString","upperHexString","toUpperCase","currentValue","indexOf","intArrayToString","intArray","String","fromCharCode","Hex","cleanup","replace","Encoding","GSM0338","basicSet","extendedSet","mapping","escCharacter","isRepresentable","str","isCharRepresentable","character","Buffer","create","data","position","cap","readByte","b","readShort","res","readInt","Bytes","readLong","array","Smpp","DataTypes","Integer","read","buf","CString","HexDumpCharactersPanel","characters","C","idx","HexDump","changeCursorOffset","changeCursorTimer","clearTimeout","newState","assign","setTimeout","setState","HexDumpOffsetPanel_HexDumpOffsetPanel","HexDumpBodyPanel_HexDumpBodyPanel","HexDumpCharactersPanel_HexDumpCharactersPanel","CalcTextArea","textLength","error","timer","onChange","rawText","hexDump","Math","floor","defaultValue","cols","onKeyUp","Menu","NavLink","activeClassName","to","HomePage","HexDumpPage","SmppDecoderPage","App","hash","window","location","oldText","BrowserRouter","basename","concat","process","components_Menu","role","Switch","Route","exact","path","component","HexDump_HexDump_HexDump","CalcTextArea_CalcTextArea","href","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4014ca03.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport \"./HexDump.css\";\n\nexport class HexDumpOffsetPanel extends Component {\n    render() {\n        var rows = [];\n\n        var row = this.props.cursorOffset != null ? this.props.cursorOffset >> 4 : null;\n\n        var rowCounter = 0;\n        for (var i=0;i<this.props.hexDumpLength;i+=16,rowCounter++) {\n            var offset = (\"000000000000\" + i).substr(-12);\n\n            var classes = [\n                (((i >> 4) % 2 === 0) ? \"strip-odd\" : \"strip-even\"),\n                (row != null && row === i >> 4 ? \"selected\" : \"\"),\n            ];\n\n            rows[i] = (\n                        <span\n                            className={classes.join(\" \")}\n                            data-offset={i}\n                            key={i}\n                        >{offset}</span>\n                    );\n        }\n\n        return (\n            <div className=\"hex-dump-offset-panel\">\n                {rows}\n            </div>\n        );\n    }\n}","import React,{Component} from 'react';\nimport \"./HexDump.css\";\n\nimport \"../color-groups.css\";\n\nexport class HexDumpBodyPanel extends Component {\n    constructor(props) {\n        super();\n\n        this.onChangeCursorOffset = this.onChangeCursorOffset.bind(this);\n\n        this.state = {index:0};\n    }\n    onChangeCursorOffset(event) {\n        this.props.onChangeCursorOffset(event.target.dataset.offset);\n    }\n    render() {\n        var items = [];\n\n        var offset=0;\n        for (var i=0;i<this.props.hexdump.length;i+=2, offset++) {\n            items.push({offset:offset, text:this.props.hexdump.substr(i,2)});\n        }\n\n        var self = this;\n\n        return (\n            <div className=\"hex-dump-body-panel\">\n                {items\n                    .map(\n                        function(el) {\n                            return (\n                                <span\n                                    onMouseOver={self.onChangeCursorOffset}\n                                    data-offset={el.offset}\n                                    className={self.props.cursorOffset===el.offset ? \"selected\" : \"\"}\n                                    key={el.offset}>{el.text}</span>\n                            );\n                        }\n                    )\n                }\n            </div>\n        );\n    }\n}","let Utils = {};\nUtils.Text = {};\nUtils.Text.isPrint=function(val) {\n\tif (val > 0x20 && val < 0x7f) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\nUtils.Text.HexSymbols = \"0123456789ABCDEF\";\nUtils.Text.intToHex = function(val) {\n\tif (val > 255) {\n\t\t//var H = Utils.Text.byteToHex(val >> 8);\n\t\tvar H = Utils.Text.intToHex(val >> 8);\n\t\tvar L = Utils.Text.byteToHex(val & 0xFF);\n\t\t\t\t\n\t\treturn \"\"+H+L;\n\t} else {\n\t\treturn Utils.Text.byteToHex(val);\n\t}\n};\nUtils.Text.byteToHex = function(val) {\n\tvar H = Utils.Text.halfByteToHex(val >> 4);\n\tvar L =\tUtils.Text.halfByteToHex(val & 0xF);\n\t\n\treturn \"\"+H+L;\n};\nUtils.Text.halfByteToHex = function(val) {\n\treturn Utils.Text.HexSymbols.charAt(val & 0xF);\n};\n\nUtils.Text.stringToHex=function(s) {\n\tvar result=[];\n\tfor (var i=0;i<s.length;i++) {\n\t\tresult.push(Utils.Text.intToHex(s.charCodeAt(i)));\n\t}\n\t\n\treturn result.join('');\n};\n\nUtils.Text.hexToIntArray=function(hexString) {\n\tvar upperHexString = hexString.toUpperCase();\n\t\n\tvar result=[];\n\tvar currentValue=0;\n\tfor (var i=0;i<upperHexString.length;i++) {\n\t\tif (i % 2 === 1) {\n\t\t\tcurrentValue |= Utils.Text.HexSymbols.indexOf(upperHexString.charAt(i)); \n\t\t\tresult.push(currentValue);\t\t\t\t\t\t\n\t\t} else {\n\t\t\tcurrentValue = Utils.Text.HexSymbols.indexOf(upperHexString.charAt(i)) << 4; \n\t\t}\n\t}\n\t\t\t \n\treturn result;\t \n};\n\nUtils.Text.intArrayToString=function(intArray) {\n\tvar result=[];\n\t\n\tfor (var i=0;i<intArray.length;i++) {\n\t\tresult.push(String.fromCharCode(intArray[i]));\n\t}\n\t\t\t \n\treturn result.join('');\t \n};\n\nUtils.Text.Hex = {};\n\nUtils.Text.Hex.cleanup = function(hexString) {\n\tif (hexString == null) {\n\t\treturn \"\";\n\t}\n\n    var text = hexString.replace(/[^0-9a-fA-F]/gim,\"\");\n\n    return text;\n};\n\nUtils.Text.Encoding = {};\n\nUtils.Text.Encoding.GSM0338 = {};\n\nUtils.Text.Encoding.GSM0338.basicSet = \"@£$¥èéùìòÇ\\rØø\\nÅåΔ_ΦΓΛΩΠΨΣΘΞ@ÆæßÉ !\\\"#¤%&'()*+,-./0123456789:;<=>?¡ABCDEFGHIJKLMNOPQRSTUVWXYZÄÖÑÜ§¿abcdefghijklmnopqrstuvwxyzäöñüà\";\nUtils.Text.Encoding.GSM0338.extendedSet = \"|^€{}[~]\\\\\";\nUtils.Text.Encoding.GSM0338.mapping = [0x40, 0x14, 0x65, 0x28, 0x29, 0x3c, 0x3d, 0x3e, 0x2f];\nUtils.Text.Encoding.GSM0338.escCharacter = 0x1B;\n\nUtils.Text.Encoding.GSM0338.isRepresentable = function(str) {\n\tif (str === null || str.length === 0) {\n\t\treturn true;\n\t}\n\n\t/*if (str.length > 1) {\n\t\tfor (var i=0;i<str.length;i++) {\n\t\t\tvar res = Utils.Text.Encoding.GSM0338.isRepresentable(str.charCodeAt());\n\t\t}\n\t}*/\n\treturn false;\n};\n\nUtils.Text.Encoding.GSM0338.isCharRepresentable = function(character) {\n\tvar basicPosition = Utils.Text.Encoding.GSM0338.basicSet.indexOf(character);\n\n\tif (basicPosition >= 0) {\n        return true;\n    }\n\n    var extendedPosition = Utils.Text.Encoding.GSM0338.extendedSet.indexOf(character);\n\n\tif (extendedPosition >= 0) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nUtils.Buffer = {};\n\nUtils.Buffer.create = function(intArray) {\n\tvar buffer = {\n\t\tdata: intArray,\n\t\tlength: intArray.length,\n\t\tposition:0,\n\t\tcap:function() {\n\t\t\treturn this.length - this.position;\n\t\t},\n\t\treadByte:function() {\n\t\t\tvar b = this.data[this.position];\n\t\t\tthis.position++;\n\t\t\t\n\t\t\treturn b;\n\t\t},\n\t\treadShort:function() {\n\t\t  var res = 0;\n\t\t\tfor (var i=0;i<2;i++) {\n\t\t\t\tres = (res << 8) + this.readByte();\n\t\t\t}\n\n\t\t\treturn res;\t\n\t\t},\n\t\treadInt:function() {\n\t\t\tvar res = 0;\n\t\t\tfor (var i=0;i<4;i++) {\n\t\t\t\tres = (res << 8) + this.readByte();\n\t\t\t}\n\n\t\t\treturn res;\n\t\t}\n\t};\n\t\n\treturn buffer;\n};\n\nUtils.Bytes = {};\n\nUtils.Bytes.readLong=function(array) {\n\tvar res = 0;\n\tfor (var i=0;i<4;i++) {\n\t\tres = (res << 8) + array[i];\n\t}\n\t\n\treturn res;\n}\n\nUtils.Smpp = {};\n\nUtils.Smpp.DataTypes = {};\n\nUtils.Smpp.DataTypes.Integer = {\n\tread:function(buf) {\n\t\treturn buf.readInt();\n\t}\n};\nUtils.Smpp.DataTypes.CString = {};\nUtils.Smpp.DataTypes.String = {};\nUtils.Smpp.DataTypes.Integer = {};\n/*\nvar hexDumpStr=\"0000007500000004000000000000000200010131393438000000313233343536373839000000000000000003000568656C6C6F000500010000070001010006000101000800020000042400000019000100020F000101020E0001010421000101000D000100000F000101000E000101001000020000\";\n\nvar intArr = Utils.Text.hexToIntArray(hexDumpStr);\n\nvar buf = Utils.Buffer.create(intArr);\n\nconsole.log(\"Length:\" + buf.readInt() +\":\" + buf.cap());\nconsole.log(\"Command ID:\" + buf.readInt() +\":\" + buf.cap());\nconsole.log(\"Status:\" + buf.readInt() +\":\" + buf.cap());\nconsole.log(\"Sequence number:\"+buf.readInt() +\":\" + buf.cap());*/\n\n\nexport default Utils;","import React,{Component} from 'react';\n\nimport \"./HexDump.css\";\nimport Utils from \"../Utils\";\n\nexport class HexDumpCharactersPanel extends Component {\n    constructor(props) {\n        super(props);\n\n        this.onChangeCursorOffset = this.onChangeCursorOffset.bind(this);\n    }\n    onChangeCursorOffset(event) {\n        this.props.onChangeCursorOffset(event.target.dataset.offset);\n    }\n    render() {\n        var hexElements = Utils.Text.hexToIntArray(this.props.hexdump);\n\n        var characters =\n            hexElements\n                .map(\n                    function(el) {\n                        if (Utils.Text.isPrint(el)) {\n                            return String.fromCharCode(el);\n                        } else {\n                            return \".\";\n                        }\n                    }\n            );\n\n        var self = this;\n\n        return (\n            <div className=\"hex-dump-characters-panel\">\n                {characters\n                    .map(\n                        function(C, idx) {\n                            return (\n                                <span\n                                    onMouseOver={self.onChangeCursorOffset}\n                                    className={self.props.cursorOffset===idx ? \"selected\" : \"\"}\n                                    key={idx}\n                                    data-offset={idx}>{C}</span>\n                            );\n                        }\n                    )}\n            </div>\n        );\n    }\n}","import React,{Component} from 'react';\nimport {HexDumpOffsetPanel} from \"./HexDumpOffsetPanel\";\nimport {HexDumpBodyPanel} from \"./HexDumpBodyPanel\";\nimport {HexDumpCharactersPanel} from \"./HexDumpCharactersPanel\";\nimport \"./HexDump.css\";\n\nexport class HexDump extends Component {\n    constructor(props) {\n        super(props);\n\n        this.changeCursorOffset = this.changeCursorOffset.bind(this);\n\n        this.state = {\n            cursorOffset:null,\n            changeCursorTimer:null\n        };\n    }\n    changeCursorOffset(offset) {\n        if (this.state.changeCursorTimer != null) {\n            clearTimeout(this.state.changeCursorTimer);\n        }\n\n        var newState = Object.assign({}, this.state);\n\n        var self = this;\n\n        newState.changeCursorTimer =\n            setTimeout(\n                function() {\n                    clearTimeout(self.state.changeCursorTimer);\n\n                    self.setState({cursorOffset:offset, changeCursorTimer:null});\n                },\n                10\n            );\n\n        this.setState(newState);\n    }\n    render() {\n        return (\n            <div className=\"hex-dump-panel\">\n                <div className=\"hex-dump-container\">\n                    <HexDumpOffsetPanel cursorOffset={this.state.cursorOffset} hexDumpLength={this.props.hexdump.length/2} />\n                    <HexDumpBodyPanel onChangeCursorOffset={this.changeCursorOffset} cursorOffset={this.state.cursorOffset} hexdump={this.props.hexdump} />\n                    <HexDumpCharactersPanel\n                        onChangeCursorOffset={this.changeCursorOffset}\n                        cursorOffset={this.state.cursorOffset}\n                        hexdump={this.props.hexdump}\n                    />\n\n                    <div className=\"clearer\" />\n                </div>\n            </div>\n        );\n    }\n}","import React,{Component} from 'react';\n\nexport class CalcTextArea extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textLength: null,\n            error:null,\n            timer:null\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n    onChange(event) {\n        if (this.state.timer != null) {\n            return ;\n        }\n\n        var self = this;\n\n        var target = event.target;\n\n        let timer = setTimeout(\n            function() {\n                var rawText = target.value;\n\n                var hexDump = (rawText != null ? rawText.replace(/[^0-9a-fA-F]/gim, \"\") : \"\");\n\n                var hexDumpLength = hexDump.length;\n\n                if (hexDumpLength % 2 === 0) {\n                    self.setState({textLength: hexDump.length / 2, error: null});\n                } else {\n                    self.setState({textLength: Math.floor(hexDump.length / 2), error: \"Not enough input\"});\n                }\n\n                clearTimeout(self.state.timer);\n                self.state.timer = null;\n\n                if (!!self.props.onChange) {\n                    self.props.onChange(hexDump);\n                }\n            },\n            500\n        );\n\n        this.setState(Object.assign({}, this.state, {timer}));\n    }\n    render() {\n        var error;\n\n        if (this.state.error != null) {\n            error = (<span className='error'>{this.state.error}</span>);\n        }\n\n        return (\n            <div>\n                <textarea defaultValue={this.props.text} rows={this.props.rows} cols={this.props.cols} onChange={this.onChange} onKeyUp={this.onChange}></textarea><br />\n                <span>Length: {this.state.textLength}</span>\n                <br />\n                {error}\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport * as ROUTES from '../routes';\n\nclass Menu extends Component {\n    render() {\n        return (\n            <div className=\"sidebar-sticky\">\n                <ul className=\"nav flex-column\">\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" activeClassName=\"active\" to={ROUTES.PATH_HOME}>\n                            Главная\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" activeClassName=\"active\" to={ROUTES.PATH_HEX_DUMP}>\n                            Hex-dump\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" activeClassName=\"active\" to={ROUTES.PATH_SMPP_DECODE}>\n                            Smpp-decoder\n                        </NavLink>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Menu;","export const PATH_HOME = \"/\";\nexport const PATH_HEX_DUMP = \"/hex-dump\";\nexport const PATH_SMPP_DECODE = \"/smpp-decode\";","import React, {Component} from 'react';\n\nclass HomePage extends Component {\n    render() {\n        return (\n            <div>\n              Главная+++\n            </div>\n        );\n    }\n}\n\nexport default HomePage;","import React, {Component} from 'react';\n\nclass HexDumpPage extends Component {\n    render() {\n        return (\n            <div>\n                hex dump\n            </div>\n        );\n    }\n}\n\nexport default HexDumpPage;","import React, {Component} from 'react';\n\nclass SmppDecoderPage extends Component {\n    render() {\n        return (\n            <div>\n                Smpp decoder\n            </div>\n        );\n    }\n}\n\nexport default SmppDecoderPage;","import React, { Component } from 'react';\nimport './App.css';\nimport {HexDump} from \"./HexDump/HexDump\";\nimport {CalcTextArea} from \"./LengthTextArea/CalcTextArea\";\nimport Utils from \"./Utils\";\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Menu from \"./components/Menu\";\nimport * as ROUTES from './routes';\nimport HomePage from \"./pages/HomePage\";\nimport HexDumpPage from \"./pages/HexDumpPage\";\nimport SmppDecoderPage from \"./pages/SmppDecoderPage\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        var hash = window.location.hash;\n\n        var oldText=\"\";\n\n        if (hash != null && hash.length>1) {\n            oldText = Utils.Text.Hex.cleanup(hash.substr(1));\n        }\n\n        this.state = {\n            text:oldText,\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n    onChange(text) {\n        this.setState({text: text});\n\n        if (text.length <= 2000) {\n            window.location.hash = '#' + text;\n        }\n    }\n    render() {\n        return (\n            <Router basename={`${process.env.PUBLIC_URL}`}>\n                <div className=\"container-fluid h-100\">\n                    <div className=\"row h-100\">\n                        <nav className=\"col-md-2 d-none d-md-block bg-light sidebar\">\n                            <Menu />\n                        </nav>\n\n\n                        <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4 h-100\">\n                            <Switch>\n                                <Route exact path={ROUTES.PATH_HOME} component={HomePage} />\n                                <Route path={ROUTES.PATH_HEX_DUMP} component={HexDumpPage} />\n                                <Route path={ROUTES.PATH_SMPP_DECODE} component={SmppDecoderPage} />\n                            </Switch>\n\n\n                            <h1>Hex-to-code</h1>\n\n                            <HexDump hexdump={this.state.text} />\n                            <CalcTextArea rows=\"10\" cols=\"50\" text={this.state.text} onChange={this.onChange} />\n                            Link to this page:<a href={\"#\"+this.state.text}>#{this.state.text.length > 20 ? this.state.text.substr(0,20) : this.state.text}</a>\n\n                        </main>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}